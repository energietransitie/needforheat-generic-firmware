name: Build CI
# Trigger on any change that is not markdown and not in the main branch.
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  schedule:
    - cron: '0 8 * * 1'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # List all of the PlatformIO platforms to build
        platformio_env:
          - ESP32DEV
          - M5STACK_COREINK

        # List of the examples to build.
        test_dir:
          - test/generic-test

        # CodeQL languages
        language: [ 'cpp' ]
        
    steps:
      # Checkout repository.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          
          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality
      
      # Setup Python (needed by PlatformIO)
      - name: Setup Python
        uses: actions/setup-python@v2

      # Setup PlatformIO.
      - name: Setup PlatformIO
        run: pip install platformio
      
      # Build the PlatformIO project.
      - name: Build PlatformIO project
        env:
          PLATFORMIO_ENV: ${{ matrix.platformio_env }}
          TEST_DIR: ${{ matrix.test_dir }}
        run: pio run -e $PLATFORMIO_ENV -d $TEST_DIR

      # Perform the code analysis.
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
